"use strict";(()=>{var e={};e.id=686;e.ids=[686];e.modules={3480:(e,t,r)=>{if(false){}else{if(false){}else{if(false){}else{e.exports=r(5600)}}}},4380:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.r(t);r.d(t,{"default":()=>s});var a=r(7984);var o=e([a]);a=(o.then?(await o)():o)[0];const i=new a["default"]({apiKey:"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"});async function s(e,t){if(e.method!=="POST"){t.setHeader("Allow",["POST"]);return t.status(405).end(`Method ${e.method} Not Allowed`)}const{text:r}=e.body;if(!r){return t.status(400).json({error:"Text is required in the request body"})}console.log("Received text to summarize:",r.substring(0,100)+"...");try{const e=await i.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"system",content:"You are a social media post summarizer. Create EXTREMELY concise summaries under 200 characters. Never exceed this limit. Focus on the most important point only. Always end with a complete sentence."},{role:"user",content:`Create an extremely concise summary (STRICT 200 character limit) of this text. Must end with a complete sentence:

${r}`}],max_tokens:100,temperature:.5});console.log("OpenAI response:",e);let n=e.choices[0]?.message?.content?.trim();if(!n){console.error("No summary generated from OpenAI");return t.status(400).json({error:"Failed to generate summary from OpenAI"})}if(n.length>200){const e=n.match(/[^.!?]+[.!?]+/g)||[];n="";for(let t of e){if((n+t).length<=197){n+=t}else{break}}n=n.trim()+"..."}console.log("Final summary:",n);t.status(200).json({summary:n})}catch(e){console.error("Error calling OpenAI API:",e);t.status(500).json({error:e.message||"Failed to generate summary",details:e.response?.data||e.toString()})}}n()}catch(e){n(e)}})},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,t)=>{var r;r={value:true};Object.defineProperty(t,"M",{enumerable:true,get:function(){return n}});function n(e,t){if(t in e){return e[t]}if("then"in e&&typeof e.then==="function"){return e.then(e=>n(e,t))}if(typeof e==="function"&&t==="default"){return e}return undefined}},7984:e=>{e.exports=import("openai");},8596:(e,t,r)=>{r.a(e,async(e,n)=>{try{r.r(t);r.d(t,{config:()=>m,"default":()=>l,routeModule:()=>d});var a=r(3480);var o=r.n(a);var s=r(8667);var i=r(6435);var u=r(4380);var c=e([u]);u=(c.then?(await c)():c)[0];const l=(0,i.M)(u,"default");const m=(0,i.M)(u,"config");const d=new a.PagesAPIRouteModule({definition:{kind:s.A.PAGES_API,page:"/api/summarize",pathname:"/api/summarize",bundlePath:"",filename:""},userland:u});n()}catch(e){n(e)}})},8667:(e,t)=>{var r;r={value:true};Object.defineProperty(t,"A",{enumerable:true,get:function(){return n}});var n=function(e){e["PAGES"]="PAGES";e["PAGES_API"]="PAGES_API";e["APP_PAGE"]="APP_PAGE";e["APP_ROUTE"]="APP_ROUTE";e["IMAGE"]="IMAGE";return e}({})}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e);var n=r(8596);module.exports=n})();